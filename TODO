Legend:
	x = done
	? = unsure
	+ = in progress

1.9.0
-----
[x] additional field where users' masked host can be stored so both masked IP and vhost are available instead of just one.
[x] no struct Uid bollocks. that's insane, and now, unnecessary that we store UID in BotInfo.
[x] prevent deletion of core services via /bs bot
[ ] Move AnopeInit and AnopeFini(?) into a derived module class, change MODULE_INIT to return a pointer.
[+] remove old config, replace with insp-inspired (albeit bind format) config (CBX)
[ ] burn automake with fire (1.9.1?)
[x] SendClientIntroduction should take a UID param, rather than generating one(?)
[+] Clean up protocol
  [x] Fix anope_cmd_* stuff to just use IRCdProto methods directly
  [ ] Fix command parsing (TBD)
[?] Remote identification (1.9.1? will this break stuff?)
[?] Immediate protection enforcement

1.9.1
-----
[ ] Move a (lot) of stuff to class members as a defined interface rather than copypasta everywhere (ns_set, ns_saset!)
[ ] Redo database insanity.
  [ ] Move database load/save to a module
    [ ] realtime SQL/whatever module using events
    [ ] flatfile save on a periodic timer
  [ ] New database format (text, not binary - works very well for merging and so on)
[ ] burn do_sjoin with fire
[ ] Seamless fantasy support for all ChanServ commands, instead of requiring bs_fantasy_*

Future
------
[ ] way for one module to depend on another... not like 2 MOD_HEADs and it being unpredictable which is loaded first..
	the MOD_HEAD MOD_TAIL allows for too few combinations (interface code of insp, hooks code of insp?)
[ ] A way for one module to interact with another.. moduleGetData() only works for current module..
	moduleGetData() needs to die in a fire.

	We should replace this with proper inheritance of a class MetadataObject, which allows Shrink(), Extend(), GetExt().
	We may also wish to add additional methods for laziness (ShrinkString(), ExtendString(), GetExt()), as most of the use
	of metadata is strings, but not all.

	This also allows modules to tie whatever data they want onto any object.

[ ] generic database routines modules can use to create their own database
[ ] generic way to check which modes a user has set (u->HasUmode(UMODE_OPER))
? [ ] a way for a module to queue itself (or even another module) for unloading
[ ] add overridden form of SendGlobops accepting BotInfo
[ ] SendAkill should just take a pointer to the Akill class instead of millions of fields (same for some other stuff)
[ ] chan_set_modes should take BotInfo, possibly with override for User *?
[ ] Language system is disgusting, it must die.
  [ ] Modules should also have a way to add strings programatically
  [ ] Should be able to add many strings by dropping a file in a set location.
  [ ] I forsee this working via a function rather than defines, as it seems to do now: e.g. _("NS_NICK_IS_REGISTERED").
[?] Mail memos? think on consequences of this
[ ] Useful/common "third party" modules to core distro
  [ ] NS AJOIN
