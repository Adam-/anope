Anope for Windows
-----------------

1) Building the Source
2) Installation
3) Compiling Modules
4) Credits

1) Building the Source

    If you want to build Anope from source on a Win32 system, you will need
    to follow this instructions:

    1) Download the required files:

        * Current Anope source:
            http://zero.org:7467/viewcvs/trunk.tar.gz

        If you have Visual C++ 6, 7 or .NET skip ahead to step 2, else you
        need to download the following free components from Microsoft. Once
        downloaded, install these packages.

        * VCToolKit:
            http://download.microsoft.com/download/3/9/b/39bac755-0a1e-4d0b-b72c-3a158b7444c4/VCToolkitSetup.exe

        * .NET Framework 1.1 Redistributable:
            http://download.microsoft.com/download/a/a/c/aac39226-8825-44ce-90e3-bf8203e74006/dotnetfx.exe

        * .NET Framework SDK 1.1:
            http://download.microsoft.com/download/5/2/0/5202f918-306e-426d-9637-d7ee26fbe507/setup.exe

        * Core SDK for the needed libraries:
            http://www.microsoft.com/msdownload/platformsdk/sdkupdate/

        * MySQL for Windows (only needed if building with MySQL enabled)
            http://www.mysql.com/


    2) Unpack the Anope tarball with your favorite uncompression program
       (winzip or winrar).

    3) Bring up the Visual C++ toolkit command prompt; This will launch a
       dos command prompt like windows, which will set the environment
       properties need to make Anope. Change directories to where you unpacked
       the source code in step 2.
       
    4) You now need to configure Anope to your requirements. At the prompt type:
    
        cscript /nologo install.vbs
        
       An interactive configuration program should guide you through the install
       options, and then detect your Microsoft Visual C++ Library files. If it
       fails to detect them, you can manually specify a path. Please refer to
       your compilers documentation if you need to specify a manual path.
 
    5) You are now ready to compile. At the prompt type:

        nmake -f Makefile.win32

       Once you are back at the command prompt again, if there have been no
       errors, you are ready to go. Should you encounter errors check how to
       adjust the Makefile.inc.win32 to help resolve the issue. If those
       changes in Makefile.inc.win32 didn't help, file a bug report.

    6) Anope will install the files where the belong. The only thing you need
       to do is rename "data/example.conf" to be "services.conf".

    You have now completed the building phase of Anope for Windows. You can
    now move on to the next section, which is related to setting up Anope.

2) Installation

    Since Anope for Windows does not use a visual interface, you must do the
    configuration with a text editor before proceeding with running Anope
    itself.

    Open services.conf, and read through it carefully and adjust the settings
    you think you need to adjust. Pay special attention to these settings:

    A) IRCDModule:   This is the name of an IRCd Module that Anope will use
                     to communicate with your server. Anope supports 15 IRCds,
                     so ensure you set the right value here.
    B) RemoteServer: This is the address to your ircd, along with the port
                     and password. You should consult your ircd
                     documentation on how to link ircds.
    C) ServicesRoot: Remove the # and change the names to your nick so you
                     can take control of services once they are online.
    D) UserKey1/2/3: Remove the # infront of the three UserKey settings, and
                     change the parameters to numbers; around 6-7 digits will
                     do.

    If you are unsure of the settings, you can go to the dos command prompt
    and run "anope.exe -nofork -debug" and watch the information as it
    attempts to connect.

    You can launch services in two ways. If you are sure that the entered
    configuration information is correct, simply double clicking the Anope
    executable will cause it to start; no window will pop up. If you'd rather
    have a more textual output, you can start at the dos prompt and type in
    "anope.exe". If services are successfully started up the dos prompt will
    seem to hang; at this point you can safely close the dos window.

3) Compiling Modules

    If you want to build other modules than the ones shipped by default, you
    will need to modify the Makefile.inc.win32 file, in the src\modules folder.

    A) Add modules; find the line stating "SRCS=" and add the name of the
       file to the end of the line. So if you have two files:

        SRCS=file.c file2.c
        
       If you are compiling a folder of module components, such as the example
       "catserv", you will need to add/change the "SUBS=" line. If you were
       compiling the "catserv" example, the line would look like this:
       
        SUBS=catserv

    B) When you've done this, use the same command prompt you set up in part
       1, change directories to the src\modules folder, and type:

        nmake -f Makefile.win32
        
       followed afterwards, by:

        nmake -f Makefile.win32 install
        
    C) You should now be able to load your modules on IRC via OperServ, or via
       the services.conf file.

4) Credits

    Anope is based on Epona and IRCServices. See CREDITS for more credits and
    a complete list of all developers.

    Anope's Windows-specific code is provided by:

        * Dominick Meglio       <codemastr@unrealircd.com>
        * Trystan Scott Lee     <trystan@nomadirc.net>
        * Chris Hogben          <heinz@anope.org>
        
    Anope's Windows Installer was made using:
    
        * Inno Setup 5          <http://www.jrsoftware.org>
        
